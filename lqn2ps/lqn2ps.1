.\" -*- nroff -*-
.TH lqn2ps 1 "30 March 2022"  "5.25"
.\" $Id: lqn2ps.1 16260 2023-01-04 19:18:19Z greg $
.\"
.\" --------------------------------
.SH "NAME"
lqn2emf, lqn2fig, lqn2json, lqn2out, lqn2ps, lqn2lqn, lqn2sxd, lqn2xml \- format and translate layered queueing network models.
.SH "SYNOPSIS"
.br
.B lqn2ps
[\fIOPTION \&.\|.\|.\fP]
[
FILE \&.\|.\|.
]
.SH "DESCRIPTION"
\fBlqn2ps\fR, \fBlqn2lqn\fR, \fBlqn2xml\fR, and \fBlqn2out\fR
are used to transform an LQN input file (with results) into:
graphical output such as PostScript,
a new old-style input file,
a new XML input/output file,
and textual output respectively.
In general, the name of the program is used to specify the output format, 
although the \fB\-O\fR switch always overrides this behaviour.
Refer to the \fB\-O\fR switch described below for the output formats supported.
.PP
\fBlqn2ps\fR reads its input from \fIfilename\fR, specified at the
command line if present, or from the standard input otherwise.  Output
for an input file \fIfilename\fR specified on the command line will be
placed in the file \fIfilename.ext\fR, where \fI.ext\fR depends on the
conversion taking place (see the \fB\-O\fR switch).
If \fBlqn2lqn\fR or \fBlqn2xml\fR is used to reformat an existing LQN-type or XML input file respectively,
the output is written back to the original file name.
The original file is renamed to \fIfilename\fB~\fR.
If several input files are given, then each is treated as a separate model and
output will be placed in separate output files.  This behaviour can be changed
using the \fB\-o\fR option, described below.  If input is from the
standard input, output will be directed to the standard output.  The
file name `\-' is used to specify standard input.
.SH "OPTIONS"
.TP
\fB\-A\fR, \fB\-\-aggregate=\fIobjects\fR
The \fB\-A\fI objects\fR option is used to aggregate objects.
.RS
.TP
\fBnone\fR
Don't aggregate objects.
.TP
\fBsequences\fR
Aggregate sequences of activities into a single activity.
.TP
\fBactivities\fR
Aggregate activities called by an entry into the entry.
.TP
\fBphases\fR
Aggregate activities called by an entry into the entry and remove all phases.
.PP
A new model that results from aggregation may not necessarily have the same solution as the original model.
An aggregated model is smaller, so it will solve faster.
.LP
(The default is none).
.RE
.TP
\fB\-B\fR, \fB\-\-border=\fIborder\fR
Set the border (in points).
.TP
\fB\-C\fR, \fB\-\-colour=\fIcolour\fR
The \fB\-C\fI colour\fR option is used to choose how to colour objects.
.RS
.TP
\fBnone\fR
Use gray scale instead of colour for results.
.TP
\fBresults\fR
Colour nodes based on utilization and arcs based on the utilization of the destination.  This is the default.
.TP
\fBlayers\fR
Colour nodes based on their layer.
.TP
\fBclients\fR
Colour nodes based on their client(s).
.TP
\fBtype\fR
Client tasks are coloured red, server tasks are coloured blue.
.TP
\fBchains\fR
Queueing output only: colour each chain differently.
.TP
\fBdifferences\fR
Results are displayed as percent differences (found from srvndiff --difference file1 file2) with the colour reflecting
the percentage difference.
.RE
.TP
\fB\-D\fR, \fB\-\-diff-file=\fIfilename\fR
The \fB\-D\fI filename\fR option  is used to load \fIdifference\fR data produced by srvndiff.
.TP
\fB\-F\fR, \fB\-\-font-size=\fIfont-size\fR
Set the font size (from 6 to 36 points).
.TP
\fB\-I\fR, \fB\-\-input-format=\fIARG\fR
The \fB\-I\fI ARG\fR option  is used to force the input file format to either \fIxml\fR, \fIlqn\fR, of \fIjson\fR.
By default, if the suffix of the input filename is one of: \fI.in\fR, \fI.lqn\fR, \fI.xlqn\fR, of \fI.txt\fR,
then the LQN parser will be used.  If the suffix of the input filename is one of: \fI.json\fR, \fI.lqnj\fR, \fI.jlqn\fR, of \fI.lqjo\fR,
then the JSON parser will be used.  Otherwise, input is assumed to be XML.
.TP
\fB\-H\fR, \fB\-\-help\fR
Print help.
.TP
\fB\-J\fR, \fB\-\-justification=\fIobject=ARG\fR
The \fB\-J\fI object=ARG\fR option is used to set the justification for \fIobject\fP.	 \fIObject\fR is one of:
\fBnodes\fR, \fBlabels\fR, or \fBactivities\fR.
\fIJustification\fR is one of \fBleft\fR,\fBcenter\fR,\fBright\fR,\fBalign (for nodes)\fR, or\fBabove (for activities)\fR.
The default is center justifcation for all objects.
.TP
\fB\-K\fR, \fB\-\-key=\fIkey\fR
Print key.
.TP
\fB\-L\fR, \fB\-\-layering=\fIlayering\fR
The \fB\-L\fI layering\fR option is used to choose the layering strategy for output.
.RS
.TP
\fBbatched\fR
Batch layering (default for lqns(1))
.TP
\fBgroup=\fIregexp\fR[,\fIregexp\fR]\fR
Batch layering, but tasks are grouped by the processors identified by a list of \fIregexp\fP.
Processors not matching any group expression are assigned to the last "default" group.
.TP
\fBhwsw\fR
Hardware-Software layering (Clients and software servers in one layer,
software servers and processors in the other).
.TP
\fBmol\fR
Mol layering (all of the processors are on their own layer).
.TP
\fBprocessor\fR
Batch layering, but tasks are grouped by processor.
Processors are ordered by the level of their calling tasks,
i.e., processors for reference tasks appear first.
.TP
\fBprocessor-task\fR
Hardware-Software layering, but tasks are grouped by processor.
.TP
\fBshare\fR
Batch layering, but tasks are grouped by their processor share.
Shares are ordered by the level of their calling tasks,
i.e., processors for reference tasks appear first.
.TP
\fBsquashed\fR
Place all tasks in level 1, and all processors in level 2.  There is only
one submodel overall.
.TP
\fBsrvn\fR
Each server is assigned to its own submodel.
.TP
\fBtask-processor\fR
Hardware-Software layering, but tasks are grouped by processor.
.LP
(The default is batched).
.RE
.TP
\fB\-M\fR, \fB\-\-magnification=\fImagnification\fR
Magnification.
.TP
\fB\-N\fR, \fB\-\-precision=\fIprecision\fR
Number of digits of output precision.
.TP
\fB\-O\fR, \fB\-\-format=\fIformat\fR
Set the output format.
.RS
.TP
\fBeepic\fR
Generate eepic macros for LaTeX.
.TP
\fBemf\fR
Generate Windows Enhanced Meta File (vector) output.
.TP
\fBfig\fR
Generate input for xfig(1).
.TP
\fBjson\fR
Generate an JSON input file.  If results are available, they are included.
The \fB\-h\fR and \fB\-S\fR options can be used to generate new input models
consisting only of the objects selected.
New input files are always "cleaned up".
.TP
\fBlqx\fR
Generate an XML input file.  If results are available, they are included.
The \fB\-h\fR and \fB\-S\fR options can be used to generate new input models
consisting only of the objects selected.  If SPEX is present, it will be converted to LQX.
New input files are always "cleaned up".
.TP
\fBnull\fR
Generate no output except summary statistics about the model or models.
.TP
\fBout\fR
Generate a new output file using the results from a parseable output file or from the results found in an XML file.
.TP
\fBparseable\fR
Generate a new parseable output file using the results from a parseable output file or from the results found in an XML file.
.TP
\fBrtf\fR
Generate a new output file in Rich Text Format using the results from a parseable output file or from the results found in an XML file.
.TP
\fBlqn\fR
Generate a new input file.	 Results are ignored unless a subset of the input file is being generated.
The \fB\-h\fR and \fB\-S\fR options can be used to generate new input models
consisting only of the objects selected.
If a parseable output file is available, the transformed subset will derive service times based on results. 
Refer to \fI``SRVN Input File Format''\fR for a complete
description of the input file format for the programs.
New input files are always "cleaned up".
.TP
\fBps\fR
Generate Encapsulated Postscript.
.TP
\fBpstex\fR
Generate PostScript and LaTeX (pstex).
.TP
\fBsvg\fR
Generate Scalable Vector Graphics (vector) output.
.TP
\fBsxd\fR
Generate OpenOffice Drawing (vector) output.  
The output file must be a regular file.  Output to special files is not supported.
.TP
\fBxml\fR
Generate an XML input file.  If results are available, they are included.
The \fB\-h\fR and \fB\-S\fR options can be used to generate new input models
consisting only of the objects selected.
New input files are always "cleaned up".
.RE
.TP
\fB\-P\fR, \fB\-\-processors=\fIprocessors\fR
Specify which processors are displayed.
.RS
.TP
\fBnone\fR
Don't display any processors..
.TP
\fBdefault\fR
Only display those processors that might have contention.
.TP
\fBall\fR
Show all processors.
.TP
\fBnon-infinite\fR
Show all non-infinite processors.
.LP
(The default is default).
This option has no effect for LQN input and output file generation.
.RE
.TP
\fB\-Q\fR, \fB\-\-queueing-model=\fIqueueing-model\fR
The \fB\-Q\fI queueing-model\fR option is used to generate a diagram of the underlying queueing
model for the submodel number given as an argument.
This option has no effect for LQN input and output file generation.
.TP
\fB\-R\fR, \fB\-\-replication=\fIARG\fR
The \fB\-R\fI ARG\fR option is to expand or remove replication.
.RS
.TP
\fBnone\fR
Don't remove or expand replication.
.TP
\fBexpand\fR
Exapand replicated models into a flat model.  Tasks and processors are renamed to <name>_1, <name>_2, etc.
.TP
\fBremove\fR
Remove all replication from the model.
.LP
(The default is none).
.RE
.TP
\fB\-S\fR, \fB\-\-submodel=\fIsubmodel\fR
The \fB\-S\fI submodel\fR option is used to generate a diagram of the submodel number given as an argument.
If this option is used with \fBlqn2lqn\fP, parameters will be derived to approximate the submodel at the time of the final solution.
.TP
\fB\-V\fR, \fB\-\-version\fR
Tool version.
.TP
\fB\-W\fR, \fB\-\-no-warnings\fR
Suppress warnings.
.TP
\fB\-X\fR, \fB\-\-x-spacing=\fIspacing[,width]\fR
X spacing [and task width] (points).
.TP
\fB\-Y\fR, \fB\-\-y-spacing=\fIspacing[,height]\fR
Y spacing [and task height] (points).
.TP
\fB\-Z\fR, \fB\-\-special=\fIARG[=value]\fR
Special options:
.RS
.TP
\fBannotate\fR
Annotate the lqn input file (lqn output only).
.TP
\fBarrow-scaling\fR
Scale the size of arrow heads by the scaling factor \fIarg\fP.
.TP
\fBclear-label-background\fR
Clear the area behind the label (fig output only).
.TP
\fBbcmp\fR
BCMP.
.TP
\fBexhaustive-topological-sort\fR
Don't short circuit the topological sorter.  (Some models render better).
.TP
\fBflatten\fR
Submodels drawn with \-S or \-Q normally place clients in their level found from the full model.  This option draws all clients for a given submodel in one layer.
.TP
\fBforwarding\fR
Nest forwarding instead of keeping it at the current level (historical). 
.TP
\fBgroup\fR
When using \-Lgroup, name a group.  Multiple groups are named using a comma separated list.
.TP
\fBlayer-number\fR
Print the layer number (valid for graphical output only).
.TP
\fBno-alignment-box\fR
Don't generate the alignment boxes (Fig output).
.TP
\fBno-async\fR
Don't follow asynchronous calls when doing the topological sort.
.TP
\fBno-cv-sqr\fR
Remove all coefficient of variation terms from a model.  This option is used when generating new models.
.TP
\fBno-phase-type\fR
Remove all phase type flag terms from a model.  This option is used when generating new models.
.TP
\fBno-reference-task-conversion\fR
When generating new models as submodels of existing models, servers in the original model are converted to reference tasks when possible.  This option overrides this conversion; these models use open-arrivals instead.
.TP
\fBprocessor-scheduling\fR
Change the scheduling for all fixed-rate processors to ?.
.TP
\fBprune\fR
All tasks which are infinite servers are merged into non-infinite server tasks and clients
.TP
\fBrename\fR
Rename all of the icons to p\fIn\fP, t\fIn\fP, e\fIn\fP and a\fIn\fP where \fIn\fP is an integer starting from one.
.TP
\fBsort\fR
Set the order of sorting of objects in a layer (ascending, descending, topological, none).
.TP
\fBsquish\fR
Rename entries/activities by taking only capital letters, letters following an underscore, or numbers.
.TP
\fBsubmodels\fR
For graphical output, output the submodels (though this only works for a strictly layered model).
.TP
\fBtasks-only\fR
Draw the model omitting all entries.
.TP
\fBtask-scheduling\fR
Change the scheduling for all fixed-rate tasks to ?.
.RE
.TP
\fB(\-|+)a\fR, \fB\-\-[no-]open-wait\fR
Print queue length results for open arrivals. (The default is on).
.TP
\fB(\-|+)b\fR, \fB\-\-[no-]throughput-bounds\fR
Print task throughput bounds. (The default is off).
.TP
\fB(\-|+)c\fR, \fB\-\-[no-]confidence-intervals\fR
Print confidence intervals. (The default is off).
.TP
\fB(\-|+)e\fR, \fB\-\-[no-]entry-utilization\fR
Print entry utilization. (The default is off).
.TP
\fB(\-|+)f\fR, \fB\-\-[no-]entry-throughput\fR
Print entry throughput. (The default is off).
.TP
\fB(\-|+)g\fR, \fB\-\-[no-]histograms\fR
Print histograms. (The default is off).
.TP
\fB(\-|+)h\fR, \fB\-\-[no-]hold-times\fR
Print hold times. (The default is off).
.TP
\fB(\-|+)i\fR, \fB\-\-[no-]input-parameters\fR
Print input parameters. (The default is on).
.TP
\fB(\-|+)j\fR, \fB\-\-[no-]join-delays\fR
Print join delay results. (The default is on).
.TP
\fB\-k\fR, \fB\-\-chain=\fIclient\fR
Print all paths from client <n>. (The default is 0).
.TP
\fB(\-|+)l\fR, \fB\-\-[no-]loss-probability\fR
Print message loss probabilities. (The default is on).
.TP
\fB\-o\fR, \fB\-\-output=\fIfilename\fR
The \fB\-o\fI filename\fR option is used to direct all output to the
file \fIoutput\fR regardless of the source of input.  Multiple input
files cannot be specified when using this option except with
PostScript or EEPIC output.  Output can be directed to standard output by using
\fB\-o\fI\-\fR (i.e., the output 
file name is `\fI\-\fR'.)
.TP
\fB(\-|+)p\fR, \fB\-\-[no-]processor-utilization\fR
Print processor utilization results. (The default is on).
.TP
\fB(\-|+)q\fR, \fB\-\-[no-]processor-queueing\fR
Print processor waiting time results. (The default is on).
.TP
\fB(\-|+)r\fR, \fB\-\-[no-]results\fR
Print results. (The default is on).
.TP
\fB(\-|+)s\fR, \fB\-\-[no-]service\fR
Print execution time results. (The default is on).
.TP
\fB(\-|+)t\fR, \fB\-\-[no-]task-throughput\fR
Print task throughput results. (The default is on).
.TP
\fB(\-|+)u\fR, \fB\-\-[no-]task-utilization\fR
Print task utilization results. (The default is on).
.TP
\fB(\-|+)v\fR, \fB\-\-[no-]variance\fR
Print execution time variance results. (The default is off).
.TP
\fB(\-|+)w\fR, \fB\-\-[no-]waiting\fR
Print waiting time results. (The default is on).
.TP
\fB(\-|+)x\fR, \fB\-\-[no-]service-exceeded\fR
Print maximum execution time exceeded. (The default is off).
.TP
\fB\-\-comment\fR
Print model comment. (The default is off).
.TP
\fB\-\-solver-info\fR
Print solver information.
.TP
\fB\-\-ignore-errors\fR
Ignore errors during model checking phase.
.TP
\fB\-\-task-service-time\fR
Print task service times (for --tasks-only).
.TP
\fB\-\-run-lqx\fR
"Run" the LQX program instantiating variables and generating model files.
.TP
\fB\-\-reload-lqx\fR
"Run" the LQX program reloading results generated earlier.
.TP
\fB\-\-output-lqx\fR
Convert SPEX to LQX for XML output.
.TP
\fB\-\-include-only=\fIregexp\fR
The \fB\-I\fI regexp\fR option is used to include only those objects that match \fIregexp\fR
and those objects who call the matching objects in the output.
.TP
\fB\-\-hwsw-layering\fR
Use HW/SW layering instead of batched layering.
.TP
\fB\-\-srvn-layering\fR
Use SRVN layering instead of batched layering.
.TP
\fB\-\-method-of-layers\fR
Use the Method Of Layers instead of batched layering.
.TP
\fB\-\-flatten\fR
Flatten submodel/queueing output by placing clients in one layer.
.TP
\fB\-\-no-sort\fR
Do not sort objects for output.
.TP
\fB\-\-number-layers\fR
Print layer numbers.
.TP
\fB\-\-rename\fR
Rename all objects.
.TP
\fB\-\-tasks-only\fR
Print tasks only.
.TP
\fB\-\-bcmp\fR
[Don't] perform BCMP model conversion.
.TP
\fB\-\-no-activities\fR
Don't print activities.
.TP
\fB\-\-no-colour\fR
Use grey scale when colouring result.
.TP
\fB\-\-no-header\fR
Do not output the variable name header on SPEX results.
.TP
\fB\-\-surrogates\fR
[Don't] add surrogate tasks for submodel/include-only output.
.TP
\fB\-\-merge-replicas\fR
Merge replicas from a flattened model back to a replicated model.
.TP
\fB\-\-jlqndef\fR
Use jlqnDef-style icons (rectangles).
.TP
\fB\-\-parse-file=\fIfilename\fR
Load parseable results from filename.
.TP
\fB\-\-print-comment\fR
Print the model comment on stdout.
.TP
\fB\-\-print-submodels\fR
Show submodels.
.TP
\fB\-\-print-summary\fR
Print model summary on stdout.
.TP
\fB\-\-debug-json\fR
Output debugging information while parsing JSON input.
.TP
\fB\-\-debug-lqx\fR
Output debugging information while parsing LQX input.
.TP
\fB\-\-debug-spex\fR
Output LQX progam corresponding to SPEX input.
.TP
\fB\-\-debug-srvn\fR
Output debugging information while parsing SRVN input.
.TP
\fB\-\-debug-p\fR
Output debugging information while parsing parseable results input.
.TP
\fB\-\-debug-xml\fR
Output debugging information while parsing XML input.
.TP
\fB\-\-debug-formatting\fR
Output debugging information while formatting.
.TP
\fB\-\-dump-graphviz\fR
Output LQX parse tree in graphviz format.
.TP
\fB\-\-generate-manual\fR
Generate manual suitable for input to man(1).
.SH "SEE ALSO"
