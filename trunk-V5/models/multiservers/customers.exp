# -*- Text -*-

# Experiment: expt11 - expt03
#				.st ( client, 2 ) = { s1 * c1 };

.global
        .solver = "lqns";
        .format = "gnuplot";
        .template = "multiserver.in";
.end

.experiment cust_conway

        .set
                .solver = "lqns";
		.lqnsopts = "-Pmultiserver=conway";
                .format = "gnuplot";

        .declare
                n1 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
                n2 = 1, 2, 3, 4, 5;
		s1 = { 0.7 * n1 / n2 };
		p1 = 1.0, 0.8, 0.5, 0.3, 0.1;
		p2 = { 1.0 - p1 };

        .vary
		p1;
                n1;
		n2;

        .control
                .tm ( c1 ) = { n1 };
                .tm ( s1 ) = { n2 };
                .st ( c1, 2 ) = { s1 };
                .st ( e1, 1 ) = { p1 };
                .st ( e1, 2 ) = { p2 };

        .observe
		.plot { p1 };
                .plot { n1 };
                .plot { n2 };
		.ut ( .t, s1 );
                .th ( .t, c1 );
.end


.experiment cust_rolia

        .set
                .solver = "lqns";
		.lqnsopts = "-Pmultiserver=rolia";
                .format = "gnuplot";

        .declare
                n1 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
                n2 = 1, 2, 3, 4, 5;
		s1 = { 0.7 * n1 / n2 };
		p1 = 1.0, 0.8, 0.5, 0.3, 0.1;
		p2 = { 1.0 - p1 };

        .vary
		p1;
                n1;
		n2;

        .control
                .tm ( c1 ) = { n1 };
                .tm ( s1 ) = { n2 };
                .st ( c1, 2 ) = { s1 };
                .st ( e1, 1 ) = { p1 };
                .st ( e1, 2 ) = { p2 };

        .observe
		.plot { p1 };
                .plot { n1 };
                .plot { n2 };
		.ut ( .t, s1 );
                .th ( .t, c1 );
.end


.experiment cust_petri

        .set
                .solver = "petrisrvn";
                .format = "gnuplot";

        .declare
                n1 = 1, 2, 3, 4, 5, 6, 7, 8, 9, 10;
                n2 = 1, 2, 3, 4, 5;
		s1 = { 0.7 * n1 / n2 };
		p1 = 1.0, 0.8, 0.5, 0.3, 0.1;
		p2 = { 1.0 - p1 };

        .vary
		p1;
                n1;
		n2;

        .control
                .tm ( c1 ) = { n1 };
                .tm ( s1 ) = { n2 };
                .st ( c1, 2 ) = { s1 };
                .st ( e1, 1 ) = { p1 };
                .st ( e1, 2 ) = { p2 };

        .observe
		.plot { p1 };
                .plot { n1 };
                .plot { n2 };
		.ut ( .t, s1 );
                .th ( .t, c1 );
.end


