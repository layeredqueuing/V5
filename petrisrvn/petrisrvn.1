.TH PETRISRVN 1 "15 July 2021"
.\" $Header$
.SH NAME
petrisrvn \- solve stochastic rendezvous networks using GreatSPN.
.SH SYNOPSIS
.sp
.B petrisrvn
[
.B \-dknprvV
] [
.B \-m \fIfile\fR
] [
.B \-o \fIfile\fR
] [
.B \-P \fIpragma\fR
] [
.B \-z \fIspecialopts\fR
] [
filename
\&.\|.\|.
]
.SH DESCRIPTION
\fBPetrisrvn\fR is used to analytically solve stochastice rendezvous networks
using GreatSPN.  Refer to \fI``The Stochastic
Rendezvous Network Model for Performance of Synchronous Multi-tasking
Distributed Software''\fR for details of the model.  Refer to
\fI``SRVN Input File Format''\fR for a complete description of the
input file format for the programs.  See below for program
restrictions and limits.
.PP
\fBPetrisrvn\fR reads its input from \fIfilename\fR, specified at the
command line if present, or from the standard input otherwise.  By
default, output for an input file \fIfilename\fR specified on the
command line will be placed in the file \fIfilename\fB.out\fR.  If the
\fB\-p\fP switch is used, parseable output will also be written into
\fIfilename\fB.p\fR. If XML input is used, results will be written
back to the original input file.  This behaviour can be changed using
the \fB\-o\fIoutput\fR switch, described below.  If several files are
named, then each is treated as a separate model and output will be
placed in separate output files.  If input is from the standard input,
output will be directed to the standard output.  The file name `\-' is
used to specify standard input.
.PP
The \fB\-o\fIoutput\fR option can be used to direct output to the file
\fIoutput\fR regardless of the source of input.  Output will be XML if
XML input is used, parseable output if the \fB\-p\fP switch is used,
and normal output otherwise.  Multiple input files cannot be specified
when using this option.  Output can be directed to standard output by
using \fB\-o\fI\-\fR (i.e., the output file name is `\fI\-\fR'.)
.SH "OPTIONS"
.TP 
\fB\-d\fR, \fB\-\-debug\fR
Turn on debugging output.  Dump task and entry information showing
internal index numbers.  This option is useful for determining the
names of the servers and tasks since the parasol output routines do no
emit this information at present.  Output is directed to stdout unless
redirected using \fB\-m \fIfile\fR.
.TP
\fB\-I\fP, \fB\-\-input-format\fR=\fIarg\fR
This option is used to force the input file format to either \fIxml\fP or \fIlqn\fP.
By default, if the suffix of the input filename is one of: \fI.in\fP, \fI.lqn\fP or \fI.xlqn\fP, 
then the LQN parser will be used.  Otherwise, input is assumed to be XML.
.TP
\fB\-j\fR, \fB\-\-json\fR
Output results in JSON format.
.TP
\fB\-k\fR, \fB\-\-keep-net\fR
Keep all results from the solution of the petrinet.
.TP
\fB\-m\fR, \fB\-\-monitor-file\fR=\fI<filename>\fR
Save the output from the GreatSPN solver to \fIfilename\fP.  By
default, this output is discarded.
.TP
\fB\-n\fR, \fB\-\-no-execute\fR
Read the input, but do not solve.  No output is generated.
.TP
.TP
\fB\-o\fP, \fB\-\-output\fR=\fIfilename\fR
Direct analysis results to \fIfilename\fP.  A filename of `\fI-\fR'
directs output to standard output.  If \fIoutput\fR is a directory,
all output is saved in \fIoutput/input.out\fR. If the input model
contains a SPEX program with loops, the SPEX output is sent to
\fIoutput\fR; the individual model output files are found in the
directory \fIoutput.d\fR. If \fBpetrisrvn\fP is invoked with this 
option, only one input file can be specified.
.TP
\fB\-p\fR
Generate parseable output suitable as input to other programs such as
\fBsrvndiff(1)\fR and \fBlqn2ps(1)\fR. The parseable output is sent to an
output file, one for each input file specified, determined from its
corresponding input file by the addition of \fB.p\fR.  If standard
input is used as the input source, then the parseable output is output
to the standard output device.  In this case, only parseable output is
emitted.  If the \fB-o\fR \fIoutput\fR option is used, the parseable
output is sent to a file whose name is derived from \fIoutput\fR by
the addition of the suffix \fB.p\fR.  If a suffix already exists on
\fIoutput\fR then that suffix is replaced.
.TP
\fB\-P\fP, \fB\-\-pragma\fR=\fIvalue\fR
Set \fIpragma\fP to value.  See the section on pragmas below.
.TP
\fB\-r\fP, \fB\-\-rtf\fR
Output results using Rich Text Format instead of plain text.  Processors, entries and tasks with high utilizations are coloured in red.
.TP
\fB\-R\fR, \fB\-\-reload-net\fR
Reread a preexisting, solved model (generated using \fB\-k\fR).
.TP
\fB\-t\fR, \fB\-\-trace-greatspn\fR
Show output from the execution of the GreatSPN solver.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Display solution execution.  For \fBpetrisrvn\fP, the
output of the various petrinet solution stages is shown.
.TP
\fB\-V\fR, \fB\-\-version\fR
Display version number.  
.TP
\fB\-w\fR, \fB\-\-no-warnings\fR
Ignore warnings.  The default is to print out all warnings.
.TP
\fB\-x\fR, \fB\-\-xml\fR
Output results in XML format.
.TP
\fB\-\-disjoint\-customers\fR
Create copies for reference tasks, rather that using a single task
with multiple tokens. (increases state space)
\fB\-\-no\-header\fR
Do not print out the Result Variable header when running with SPEX input.
This option has no effect otherwise.
.TP
\fB\-\-overtaking[=ARG]\fR
Find in-service and overtaking probabilities (increases state
space). ARG=task.
.TP
\fB\-\-queue\-limit=ARG\fR
Set the queue size at a task for any open arrivals or asynchronous
sends to ARG.  This amount is in addition to the possible of customers
that can arrive through rendezvous requests.
.TP
\fB\-\-random\-processors\fR
Use random queueing at all processors (reduces state space).
.TP
\fB\-\-random\-queueing\fR
Use random queueing at all tasks and processors (reduces state space).
.TP
\fB\-\-reload-lqx\fR
Re-run the LQX/SPEX program without re-solving the models.  Results must exist from a previous solution run.
This option is useful if LQX print statements or SPEX results are changed.
.TP
\fB\-\-restart\fR
Re-run the LQX/SPEX program without re-solving models which were
solved successfully.  Models which were not solved successfully because of state
space explosion, will be solved again.
This option is useful for running a second pass with different options
to reduce the state space.
.TP
\fB\-\-simplify\fR
Remove redundant parts of the net such as single place processors.
.TP
\fB\-\-spacing=ARG\fR
Set the spacing between places and transition to ARG for the GreatSPN editor (the default is
3).  
\fB\-\-debug-lqx\fR
Output debugging information as an LQX program is being parsed.
.TP
\fB\-\-debug-xml\fR
Output XML elements and attributes as they are being parsed.   Since the XML parser usually stops when it encounters an error,
this option can be used to localize the error.
.SH "PRAGMAS"
.TP
\fBforce-random-queueing\fR=\fI(true,false}\fP
Use random queueing at at all servers.  This reduces the state space.
The default is FIFO queueing.
.TP
\fBprocessor-scheduling\fR=\fIarg\fP
.RS
.TP
\fBFIFO\fP
Force all processors to use first-come, first-served scheduling.
.TP
\fBRAND\fP
Force all processors to use random scheduling for message servicing
(reduces state space)
.RE
.TP
\fBqueue-size\fR=\fIn\fP
Set the queue size for open arrival or asynchronous sends to
\fIarg\fP.  Queue overflows are reported as lost messages.
.TP
\fBreschedule-on-async-send\fR=\fI{true,false}\fR
Force a resechedule of the processor (requeue) when an asynchronous
(send-no-reply) messages is sent if set to \fItrue\fP.
The default is to continue executing the current phase.
.TP
\fBsave-marginal-probabilities\fR=\fI{true,false}\fR
Save the marginal queue probabilites for all multiserver stations if
set to \fItrue\fP. 
.TP
\fBseverity-level\fR=\fIarg\fR
.RS
.TP
\fBall\fP
Output all error, warning and advisory messages.
.TP
\fBerror\fP
Don't output warnings or advisory messages.
.TP
\fBwarning\fP
Don't output advisory messages.
.TP
\fBadvisory\fP
Don't output warning messages.
.RE
The default is all.
.TP
\fBspex-comment\fR=\fI{true,false}\fR
Output the model comment as a header row with SPEX output.  The default is \fIfalse\fP.
.TP
\fBspex-header\fR=\fI{true,false}\fR
Output the header row (column names) with SPEX output.  The default is \fItrue\fP.
.TP
\fBstop-on-message-loss\fR\fR=\fI{true,false}\fR
This pragma is used to control the operation of the solver when the
arrival rate exceeds the service rate of a server.
\fIArg\fP must be one of: 
.RS
.TP
\fBtrue\fP
Stop if messages are lost.
.TP
\fBfalse\fP
Ignore queue overflows for open arrivals and send-no-reply requests.
Since queues in petrisrvn are bounded, results may differ from
analytic solutions with no bounds.
.LP
The default is no.
.RE
.TP
\fBtask-scheduling\fR=\fIarg\fP
Set the scheduling for messsages arriving at the task to \fIarg\fP.
.RS
.TP
\fBFIFO\fP
Force all tasks to use first-come, first-served scheduling.
.TP
\fBRAND\fP
Force all tasks to use random scheduling for message servicing
(reduces state space)
.RE
.SH "RETURN VALUE"
\fBPetrisrvn\fR exits with 0 on success, 1 if the model failed to converge,
2 if the input was invalid, 4 if a command line argument was
incorrect, 8 for file read/write problems and -1 for fatal errors.  If
multiple input files are being processed, the exit code is the
bit-wise OR of the above conditions.
.SH "MODEL LIMITS"
The following table lists the acceptable parameter types for
\fBpetrisrvn\fR.  An error will be reported if an unsupported parameter
is supplied unless the value is the same as the default.
.PP
.TP 32
Phases
3
.TP 
Scheduling
FIFO, HOL, PPR, RAND
.TP
Open arrivals
yes
.TP
Phase type
stochastic, deterministic
.TP
Coefficient of variation
yes
.TP
Interprocessor-delay
yes
.TP
Asynchronous connections
yes
.TP
Forwarding
yes
.TP
Multi-servers
yes
.TP
Infinite-servers
yes
.TP
Max Entries
30 (Limited to state space).
.TP
Max Tasks
15 (limited to state space).
.TP
Max Processors
15 (limited to state space).
.TP
Max Multiserver.
6
.TP
Max Entries per Task
10
.TP
Max Slices per Entry
5 (for deterministic phases).
.SH "SEE ALSO"
\fI``The Stochastic Rendezvous Network Model for Performance of
Synchronous Multi-tasking Distributed Software''\fR by C.M. Woodside
et.al.
.LP
\fI``SRVN Input File Format''\fP by Dorina Petriu et. al.
.LP
srvndiff(1), egrep(1), floating_point(3)
.SH BUGS
The format of the debugging output generated by the \fB\-d\fR option
requires a knowledge of the internals of \fBsrvn\fR in order to be
understood.
