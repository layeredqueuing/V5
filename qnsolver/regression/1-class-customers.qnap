& $Id$
/declare/
   integer N1;                                                 & SPEX customers vars.
   real _Q_CPU,_R_CPU,_U_CPU,_X_CPU;
   queue Terminal,CPU,Disk1,Disk2;                             & Station identifiers
   integer n_users;                                            & Population
   real think_t;                                               & Think time.
   real CPU_t,Disk1_t,Disk2_t;                                 & Station service time
&
/station/ name=CPU;
   sched=ps;
   service=exp(CPU_t);
   transit=Terminal;
&
/station/ name=Disk1;
   sched=ps;
   service=exp(Disk1_t);
   transit=Terminal;
&
/station/ name=Disk2;
   sched=ps;
   service=exp(Disk2_t);
   transit=Terminal;
&
/station/ name=Terminal;
   type=infinite;
   init=n_users;                                               & Population by class
   service=exp(think_t);
   transit=CPU,121.,Disk1,70.,Disk2,50.;                       & visits to servers
&
/control/
   option=nresult;                                             & Suppress default output
&
/exec/
   begin
   print("N1",",","_Q_CPU",",","_R_CPU",",","_U_CPU",",","_X_CPU");
&  -- SPEX scalar variables --
&  -- SPEX arrays and completions --
   for N1:=1 step 1 until 10 do begin
&  -- Class variables --
   think_t:=15./(121+70+50);                                   & Slice time at client
   n_users:=N1;                                                & SPEX variable N1
&  -- Station variables --
   CPU_t:=0.005;
   Disk1_t:=0.03;
   Disk2_t:=0.027;
&  -- Let 'er rip! --
   solve;
&  -- SPEX results for QNAP2 solutions are converted to
&  -- the LQN output for throughput, service and waiting time.
&  -- QNAP2 throughput for a reference task is per-slice,
&  -- and not the aggregate so divide by the number of transits.
&  -- Service time is mservice() + sum of mresponse().
&  -- Waiting time is mresponse() - mservice().
   _Q_CPU:=mresponse(CPU)-mservice(CPU);                       & Convert to LQN queueing time
   _R_CPU:=mresponse(CPU);                                     & Convert to LQN service time.
   _U_CPU:=mbusypct(CPU);
   _X_CPU:=mthruput(CPU);
   print(N1,",",_Q_CPU,",",_R_CPU,",",_U_CPU,",",_X_CPU);
   end;                                                        & for _i
   end;
/end/
