.\" -*- nroff -*-
.TH qnsolver 1 ""  "5.29"
.\" $Id: qnsolver.1 17154 2024-03-31 19:41:41Z greg $
.\"
.\" --------------------------------
.SH "NAME"
qnsolver \- Solve a conventional BCMP queueing network model using Mean Value Analysis
.SH "SYNOPSIS"
.br
.B qnsolver
[\fIOPTION \&.\|.\|.\fP] [\fIFILE\fR \&.\|.\|. ]
.SH "DESCRIPTION"
\fBqnsolver\fP is used to conventional BCMP queueing network models
using Exact or Approximate Mean Value Analysis.  The input file format
is that of the Java Modeling Tools (with extensions to handle the SPEX
modeling languge used by lqns(1).)  If a ``What-If'' element is found
in the input file, output is either CSV, or a self-contained file that
can be used with gnuplot(1) to plot the results.  Otherwise, the
results for the model are printed.
.SH "OPTIONS"
.TP
\fB\-b\fR, \fB\-\-bounds\fR
Use the Bounds solver to solve the model(s).  Bounds are computed
implicitly with \fB\-\-plot\-throughput\fR and
\fB\-\-plot\-response\-time\fR.
.TP
\fB\-B\fR, \fB\-\-export-jaba\fR
Export a model that can be used by the bounds solver from the Java
Modelling Tools.
.TP
\fB\-C\fR, \fB\-\-colours=ARG\fR
Use the comma separated list of colours specified in \fIarg\fP for
plotting. (not implemented at the moment).
.TP
\fB\-d\fR, \fB\-\-debug\-mva\fR
Output debug information from the MVA solver.  The MVA library needs
to be compiled with debugging enabled to output more than just summary information.
.TP
\fB\-e\fR, \fB\-\-exact\-mva\fR
Use Exact Mean Value Analysis to solve the model(s).
.TP
\fB\-f\fR, \fB\-\-fast\-linearizer\fR
Use ``Fast Linearizer'' approximate MVA to solve the model(s).
.TP
\fB\-J\fR, \fB\-\-export-jmva\fR
Export a model that can be used by the MVA solver from the Java
Modelling Tools.
.TP
\fB\-l\fR, \fB\-\-linearizer\fR
Use Linearizer approximate MVA to solve the model(s).
.TP
\fB\-L\fR, \fB\-\-debug\-lqx\fR
Debug the LQX program.
.TP
\fB\-m\fR, \fB\-\-multiserver\fR=\fIarg\fR
Use the multiserver solution specified by \fIarg\fP.  \fIArg\fP is one
of \fIconway\fP, \fIreiser\fP, \fIrolia\fP, or \fIzhou\fP.  The Zhou
and Rolia solutions should only be used with approximate MVA.  The
Reiser solution should only be used with exact MVA.
.TP
\fB\-M\fR, \fB\-\-force-multiserver\fR
Use the multiserver solution at all load-independent stations using a
mutliplicity of one.  Normally, the simpler load-independent soltions
are used instead.
.TP
\fB\-n\fR, \fB\-\-no\-execute\fR
Load the model and run any LQX (``What-If'') code.  Do not solve.
.TP
\fB\-o\fP, \fB\-\-output\fR=\fIarg\fR
Direct analysis results to \fIoutput\fP.  A filename of `\fI-\fR'
directs output to standard output.
.TP
\fB\-O\fR, \fB\-\-file\-format\fR=\fIarg\fR
For plotting, the default is to display the plot output to the
terminal for the host operating system.  This option add gnuplot code to
output the plotting instructions to a file using the format specified
in \fIarg\fP.  \fIArg\fP can be one of \fIemf\fP, \fIeps\fP, \fIfig\fP,
\fIgif\fP, \fIlatex\fP, \fIpdf\fP, \fIpng\fP, \fIsvg\fP.  The
output file name for the gnuplot code is the base name of the input
file being solved appended with the file format and with a suffix of \fI.gnuplot\fP.
.TP
\fB\-P\fR, \fB\-\-print\-lqx\fR
Print the LQX program generated for solving ``What-If'' models.
.TP
\fB\-q\fP, \fB\-\-plot\-queue\-length\fR=\fIarg\fR
Generate gnuplot(1) output to plot the queue length (number of
customers) for either all stations for the class named \fIarg\fP, or
for all classes for the station named \fIarg\fP.  The independent
``What-If'' variable is used as the X-axis.  
.TP
\fB\-Q\fP, \fB\-\-export\-qnap\fR[=\fIstrict\fR]
Convert the input model into QNAP.  If the optional \fIstrict\fR is
present, the conversion \Iwill\fP translate class, station and
variables names into a form suitable for QNAP2 (i.e., no more than
eight characters and no spaces for station and class names).  Spaces
or other non-alphanumeric characters are always converted to underscores.
.TP
\fB\-s\fR, \fB\-\-bard\-schweitzer\fR
Use Bard\-Schweitzer approximate MVA to solve the model(s).
.TP
\fB\-r\fP, \fB\-\-plot\-response\-time\fR
Generate gnuplot(1) output for plotting the response time and bounds for the
system from the solution of a ``What-If'' model.  The response time
does not include the residence times for the reference station.
The independent ``What-If'' variable is used for the X-axis.  
.TP
\fB\-t\fP, \fB\-\-plot\-throughput\fR[=\fIarg\fR]
Generate gnuplot(1) output for plotting the throughput.  If the
optional \fIarg\fP is present, the throughput is plotted for all
stations for the class named \fIarg\fP, or for all classes for the
station named \fIarg\fP.  If the optional \fIarg\fP is not present,
generate gnuplot to plot the throughput and throughput bounds for the
``Reference Station'' from the
solution of a ``What-If'' model. The independent ``What-If''
variable is used for the X-axis.  
.IP
If a What-If analysis of population
mix is specified in the input file, then the throughput and bounds for the second
class is plotted versus the throughput and bounds for the first class.
.TP
\fB\-u\fP, \fB\-\-plot\-utilization\fR
Generate gnuplot(1) output for plotting the utilization for the for either all stations
for the class named \fIarg\fP, or for all classes for the station
named \fIarg\fP.  The independent ``What-If'' variable is used for the X-axis.
The independent ``What-If''
variable is used for the X-axis.  
.TP
\fB\-w\fP, \fB\-\-plot\-waiting\-time\fR
Generate gnuplot(1) output for plotting the waiting time for either all stations
for the class named \fIarg\fP, or for all classes for the station
named \fIarg\fP.  The independent ``What-If'' variable is used for the X-axis.
.TP
\fB\-X\fP, \fB\-\-debug\-xml\fR
Debug XML input.
.TP
\fB\-X\fP, \fB\-\-debug\-spex\fR
Output the SPEX program generated.
.SH "SEE ALSO"
\fBlqns\fP(1), \fBgnuplot\fP(1).

